generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid()) @db.VarChar(255)
  email         String   @unique
  name          String?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  projects      Project[] @relation("UserProjects")
  tasks         Task[]    // Relación inversa con tareas
}

model Account {
  id                 String   @id @default(cuid()) @db.VarChar(255)
  userId             String
  provider           String
  providerAccountId  String
  access_token       String?
  id_token           String?
  refresh_token      String?
  scope              String?
  token_type         String?
  expires_at         Int?
  user               User     @relation(fields: [userId], references: [id])
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  tasks       Task[]   // Relación con tareas
  users       User[]   @relation("UserProjects") // Relación inversa con usuarios
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  project     Project? @relation(fields: [projectId], references: [id])
  projectId   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Session {
  id            String   @id @default(cuid()) @db.VarChar(255)
  userId        String
  sessionToken  String   @unique
  expires       DateTime
  user          User     @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  USER
}